/* Proof for ⊢ ∃ x. ((D(x)) ⇒ (∀ y. (D(y)))) */
new ContractionRight(new ExistsRight(new ImpliesRight(new ForallRight(new ExistsRight(new ImpliesRight(new WeakeningRight(new WeakeningLeft(new Identity(new Sequent([new Relation("D", [new TermVar("v")])], [new Relation("D", [new TermVar("v")])]), 0, 0), new Sequent([new Relation("D", [new TermVar("u")]), new Relation("D", [new TermVar("v")])], [new Relation("D", [new TermVar("v")])]), 0), new Sequent([new Relation("D", [new TermVar("u")]), new Relation("D", [new TermVar("v")])], [new Relation("D", [new TermVar("v")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")]))]), 1), new Sequent([new Relation("D", [new TermVar("u")])], [new Relation("D", [new TermVar("v")]), new Implies(new Relation("D", [new TermVar("v")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")])))]), 1, 1, 1), new Sequent([new Relation("D", [new TermVar("u")])], [new Relation("D", [new TermVar("v")]), new Exists(new TermVar("x"), new Implies(new Relation("D", [new TermVar("x")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")]))))]), 1, 1, new TermVar("v")), new Sequent([new Relation("D", [new TermVar("u")])], [new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")])), new Exists(new TermVar("x"), new Implies(new Relation("D", [new TermVar("x")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")]))))]), 0, 0, new TermVar("v")), new Sequent([], [new Implies(new Relation("D", [new TermVar("u")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")]))), new Exists(new TermVar("x"), new Implies(new Relation("D", [new TermVar("x")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")]))))]), 0, 0, 0), new Sequent([], [new Exists(new TermVar("x"), new Implies(new Relation("D", [new TermVar("x")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")])))), new Exists(new TermVar("x"), new Implies(new Relation("D", [new TermVar("x")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")]))))]), 0, 0, new TermVar("u")), new Sequent([], [new Exists(new TermVar("x"), new Implies(new Relation("D", [new TermVar("x")]), new Forall(new TermVar("y"), new Relation("D", [new TermVar("y")]))))]), 0)