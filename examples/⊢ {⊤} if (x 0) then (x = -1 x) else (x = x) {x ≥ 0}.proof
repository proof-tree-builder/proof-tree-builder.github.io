/* Proof for ⊢ {⊤} if (x < 0) then (x := -1 * x) else (x := x) {x ≥ 0} */
new Conditional(new ConsequenceNoPost(new AndLeft(new Z3Rule(new Sequent([new Truth(), new LessThan(new TermVar("x"), new TermInt(0))], [new GeqThan(new MultiplyTerms(new TermInt(-1), new TermVar("x")), new TermInt(0))])), new Sequent([new And(new Truth(), new LessThan(new TermVar("x"), new TermInt(0)))], [new GeqThan(new MultiplyTerms(new TermInt(-1), new TermVar("x")), new TermInt(0))]), 0, 1, 0), new Assignment(new HoareTriple(new GeqThan(new MultiplyTerms(new TermInt(-1), new TermVar("x")), new TermInt(0)), new CmdAssign(new TermVar("x"), new MultiplyTerms(new TermInt(-1), new TermVar("x"))), new GeqThan(new TermVar("x"), new TermInt(0)))), new HoareTriple(new And(new Truth(), new LessThan(new TermVar("x"), new TermInt(0))), new CmdAssign(new TermVar("x"), new MultiplyTerms(new TermInt(-1), new TermVar("x"))), new GeqThan(new TermVar("x"), new TermInt(0)))), new ConsequenceNoPost(new AndLeft(new NotLeft(new Z3Rule(new Sequent([new Truth()], [new LessThan(new TermVar("x"), new TermInt(0)), new GeqThan(new TermVar("x"), new TermInt(0))])), new Sequent([new Truth(), new Not(new LessThan(new TermVar("x"), new TermInt(0)))], [new GeqThan(new TermVar("x"), new TermInt(0))]), 0, 1), new Sequent([new And(new Truth(), new Not(new LessThan(new TermVar("x"), new TermInt(0))))], [new GeqThan(new TermVar("x"), new TermInt(0))]), 0, 1, 0), new Assignment(new HoareTriple(new GeqThan(new TermVar("x"), new TermInt(0)), new CmdAssign(new TermVar("x"), new TermVar("x")), new GeqThan(new TermVar("x"), new TermInt(0)))), new HoareTriple(new And(new Truth(), new Not(new LessThan(new TermVar("x"), new TermInt(0)))), new CmdAssign(new TermVar("x"), new TermVar("x")), new GeqThan(new TermVar("x"), new TermInt(0)))), new HoareTriple(new Truth(), new CmdIf(new LessThan(new TermVar("x"), new TermInt(0)), new CmdAssign(new TermVar("x"), new MultiplyTerms(new TermInt(-1), new TermVar("x"))), new CmdAssign(new TermVar("x"), new TermVar("x"))), new GeqThan(new TermVar("x"), new TermInt(0))))